@model SinglePageApplicationInMVC_UsingJQuery.Models.Employee

@{
    ViewBag.Title = "Index";
}

<br />
  

<div class="container">
    <div style="float:left;width:40%">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4><u>Registration Form</u></h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "Please Enter Name", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "Please Enter Password", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "Please Enter Email", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telephone, "Please Enter Telephone", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "Please Enter Address", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                            Male
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                            Female
                            @Html.ValidationMessageFor(model => model.Gender, "Please Select Gender", new { @class = "text-danger", style = "display:none" })
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "Please Check IsActive ", new { @class = "text-danger", style = "display:none" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryId", new SelectList(ViewBag.CountryList, "CountryId", "CountryName"), "Select Country", htmlAttributes: new { @class = "form-control" })
                        @*<select id="ddlcountry" class="form-control"><option value="0">Select Country</option></select>*@                        
                        @Html.ValidationMessageFor(model => model.CountryId, "Please Select Country", new { @class = "text-danger", style = "display:none" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @*<button type="submit" id="btnsave" class="btn btn-info" >Save</button>*@
                        <input type="submit" value="Save" class="btn btn-success" onclick="SaveData(); return false"/>
                        <input type="reset" value="Reset" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>

    <br />
    <br />
    <br />    
    <div style="float:right;width:60%">
        <table id="employees" class="table table-bordered table-striped table-condensed table-responsive" style="text-align:center">
            <tr>
                @*<td>Id</td>*@
                <th>FullName</th>
                <th>Email</th>
                <th>Password</th>
                <th>Telephone</th>
                <th>Address</th>
                <th>Gender</th>
                <th>Country</th>
                <th>IsActive</th>
                <th colspan="2">Action</th>
            </tr>
            <tbody></tbody>
        </table>
    </div>
</div>


<style>
    table, td, th {
        text-align: center;
    }
</style>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

      <script>
          $(document).ready(function () {
              //BindCoountry();
              BindData();
          });

          function BindData() {
              $.ajax({
                  url: '/Employee/GetEmployees',
                  type: 'GET',
                  success: function (p) {
                      $("#employees").find("tr:gt(0)").remove();
                      for (var i = 0; i < p.length; i++) {
                          $("#employees").append('<tr> <td style="display:none">' + p[i].Id + '</td>  <td>' + p[i].FullName + '</td>  <td>' + p[i].Email + '</td> <td>' + p[i].Password + '</td> <td>' + p[i].Telephone + '</td> <td>' + p[i].Address + '</td> <td>' + p[i].Gender + '</td> <td>' + p[i].CountryName + '</td> <td>' + p[i].IsActive + '</td> <td><input  type="button" value="Edit" onclick="EditData(' + p[i].Id + ')" class="btn btn-success"></td> <td><input type="button" value="Delete" onclick="DeleteData(' + p[i].Id + ')" class="btn btn-danger"></td> </tr>');
                      }
                  },
                  error: function () {
                      alert('Record not Show !!!');
                  }
              });
          }

          function SaveData() {
              if (ValidateUser() == true) {
                  $.ajax({
                      url: '/Employee/AddEmployee',
                      method: 'POST',
                      data: { Id: KKK, FullName: $("#FullName").val(), Email: $("#Email").val(), Password: $('#Password').val(), Telephone: $("#Telephone").val(), Address: $("#Address").val(), CountryId: $("#CountryId").val(), Gender: $("input[name='Gender']:checked").val(), IsActive: $("input[name='IsActive']:checked").val() },
                      success: function (data) {
                          alert('Data Save/Update Successfully');
                          BindData();
                      },
                      error: function () { }
                  });
              }
          }

          //$("#btbsave").click(function () {
          //    if (ValidateUser() == true) {
          //        $.ajax({
          //            url: '/Employee/AddEmployee',
          //            method: 'POST',
          //            data: { Id: KKK, FullName: $("#FullName").val(), Email: $("#Email").val(), Password: $('#Password').val(), Telephone: $("#Telephone").val(), Address: $("#Address").val(), CountryId: $("#CountryId").val(), Gender: $("input[name='Gender']:checked").val(), IsActive: $("input[name='IsActive']:checked").val() },
          //            success: function (data) {
          //                alert('Data Save/Update Successfully');
          //                BindData();
          //            },
          //            error: function () { }
          //        });
          //    }
          //})
          

          function BindCoountry() {
              $.ajax({
                  url: '/Employee/GetCountry',
                  type: 'GET',
                  data: {},
                  success: function (data) {
                      $.each(data, function (index, country) {
                          $('#ddlcountry').append($('<option/>').attr("value", country.CountryId).text(country.CountryName));
                      });
                  },
                  error: function () { }
              });
          }

          var KKK = 0;
          function EditData(id) {
              $.ajax({
                  url: '/Employee/Edit',
                  type: 'GET',
                  data: { Id: id },
                  success: function (p) {
                      console.log(p);
                      $("#FullName").val(p[0].FullName);
                      $("#Email").val(p[0].Email);
                      $("#Password").val(p[0].Password);
                      $("#Telephone").val(p[0].Telephone)
                      $("#Address").val(p[0].Address)
                      $("#CountryId option:selected").val(p[0].CountryId);
                      $("#CountryId option:selected").text(p[0].CountryName);
                      //$("#ddlcountry option:selected").val(p[0].CountryId);
                      //$("#ddlcountry option:selected").text(p[0].CountryName);
                      $("input[name=Gender][value=" + p[0].Gender + "]").prop('checked', true);
                      if (p[0].IsActive == true){
                          $("#IsActive").prop("checked", true);
                      }
                      else {
                          $("#IsActive").prop("checked", false);
                      }
                      
                      $("#btnsave").val("Update");
                      KKK = id;

                  }
              });
          }

          function DeleteData(id) {
              if (confirm("Are you sure...?")) {
                  $.ajax({
                      url: '/Employee/Delete',
                      type: 'GET',
                      data: { Id: id },
                      success: function () {
                          BindData();
                      },
                      error: function () {
                          alert('Record Not Delete Successfully!!');
                      }
                  });
              }
              return false;
          }

          function ValidateUser() {
              event = event || window.event || event.srcElement;
              var return_val = true;
              if ($("#FullName").val().trim() == '') {
                  $("#FullName").next('span').show();
                  return_val = false;
              } else {
                  $("#FullName").next('span').hide();
              }
              if ($("#Email").val().trim() == '') {
                  $("#Email").next('span').show();
                  return_val = false;
              } else {
                  $("#Email").next('span').hide();
              }
              if ($("#Password").val().trim() == '') {
                  $("#Password").next('span').show();
                  return_val = false;
              } else {
                  $("#Password").next('span').hide();
              }
              if ($("#Telephone").val().trim() == '') {
                  $("#Telephone").next('span').show();
                  return_val = false;
              } else {
                  $("#Telephone").next('span').hide();
              }
              if ($("#Address").val().trim() == '') {
                  $("#Address").next('span').show();
                  return_val = false;
              } else {
                  $("#Address").next('span').hide();
              }
              if ($("#Gender").val().trim() == '') {
                  $("#Gender").next('span').show();
                  return_val = false;
              } else {
                  $("#Gender").next('span').hide();
              }
              return return_val;
              //if (!return_val) {
              //    event.preventDefault();
              //}
          }
</script>
}
